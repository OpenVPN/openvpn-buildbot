# -*- python -*-
# ex: set filetype=python:
def openvpnAddTClientStepsToBuildFactory(factory, combo, shell_env=None):
    if shell_env is None:
        shell_env = {}

    factory.addStep(
        steps.ShellCommand(
            command=["cp", "-f", "/buildbot/t_client.rc", "."],
            name="copy t_client.rc",
            description="copying",
            descriptionDone="copying",
        )
    )

    # The tclient.sh script populates the t_client_ips.rc file automatically.
    # This step ensure that we have at least an empty t_client_ips.rc file
    # available for t_client.sh.
    factory.addStep(
        steps.ShellCommand(
            command=["touch", "t_client_ips.rc"],
            name="touch t_client_ips.rc",
            description="touching",
            descriptionDone="touching",
        )
    )

    # These steps restore a cached t_client_ips.rc, if any. On the first run it won't exist.
    factory.addStep(
        steps.ShellCommand(
            command=[
                "cp",
                "-f",
                util.Interpolate("%(prop:persist)s/t_client_ips.rc"),
                ".",
            ],
            name="restore t_client_ips.rc",
            decodeRC={0: SUCCESS, 1: SUCCESS},
            description="restoring",
            descriptionDone="restoring",
        )
    )

    # Run the tests, including t_client.sh
    t_client_env = {"TCLIENT_SKIP_RC": "1"}
    t_client_env.update(shell_env)
    factory.addStep(
        steps.ShellCommand(
            command=["make", "check", "VERBOSE=1"],
            env=t_client_env,
            name="run tests",
            description="testing",
            descriptionDone="testing",
        )
    )

    # Copy the current t_client_ips.rc out of the build directory to restore it later.
    factory.addStep(
        steps.ShellCommand(
            command=[
                "cp",
                "-f",
                "t_client_ips.rc",
                util.Interpolate("%(prop:persist)s/t_client_ips.rc"),
            ],
            name="cache t_client_ips.rc",
            description="caching",
            descriptionDone="caching",
        )
    )

    factory.addStep(
        steps.ShellCommand(
            command="ccache -s",
            decodeRC={0: SUCCESS, 127: WARNINGS},
            name="ccache show",
            description="showing stats",
            descriptionDone="showing stats",
            env=shell_env,
        )
    )

    return factory
